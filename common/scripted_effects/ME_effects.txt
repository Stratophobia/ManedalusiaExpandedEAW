MDL_remove_ABY_templates = {
  delete_unit_template_and_units = { division_template = "Local Levy" }
  delete_unit_template_and_units = { division_template = "Clawa Regiment" }
  delete_unit_template_and_units = { division_template = "Crown Guard" }
  delete_unit_template_and_units = { division_template = "Highlander Regiment" }
}

MDL_BSG_setup = {
  hidden_effect = {
    BSG = {
      set_capital = {
        state = 712
        remember_old_capital = no
      }
      set_party_name = {
        ideology = fascism
        long_name = BAT_VASSAL_NAME_LONG
        name = BAT_VASSAL_NAME
      }
      set_party_name = {
        ideology = democratic
        long_name = BAT_VASSAL_NAME_LONG
        name = BAT_VASSAL_NAME
      }
      load_focus_tree = { tree = generic_zebra_focus }
    }
    every_owned_state = {
      limit = {
        OR = {
          is_in_array = { state_original_cores = BAT }
          is_in_array = { state_original_cores = WAR }
          is_in_array = { state_original_cores = TBK }
        }
      }
      add_core_of = BSG
    }
    MDL = { BSG = { transfer_technology = yes } }
  }
}

MDL_create_dynamic_ABY = {
  create_dynamic_country = {
    original_tag = ABY
    set_variable = { collaboration_formed_by = PREV }
    set_temp_variable = { new_country = this }

    PREV = {
      every_controlled_state = {
        limit = { occupied_country_tag = ABY }
        var:new_country = { transfer_state = PREV }
      }
      puppet = new_country
    }
    load_focus_tree = { 
      tree = generic_zebra_focus
      keep_completed = yes		   
    }
    set_capital = {
      state = 775
      remember_old_capital = no
    }
    set_party_name = {
      ideology = neutrality
      long_name = MDL_ABY_FED_PARTY_LONG
      name = MDL_ABY_FED_PARTY
    }
    set_party_name = {
      ideology = democratic
      long_name = ABY_MDL_ADMIN_PARTY_NAME_LONG
      name = ABY_MDL_ADMIN_PARTY_NAME
    }
    generate_character = {
      token_base = MDL_abyssinia_assembly
      name = MDL_abyssinia_assembly
    }
    set_portraits = {
      character = MDL_abyssinia_assembly
      army = {
        large = "gfx/leaders/MDL/MDL_FED_generic.tga"
      }
    }
    add_country_leader_role = {
      character = MDL_abyssinia_assembly
      country_leader = {
        ideology = republicanism
        expire = "1965.1.1.1"
        id=-1
      }
      promote_leader = yes
    }
    add_country_leader_role = {
      character = MDL_abyssinia_assembly
      country_leader = {
        ideology = harmonic_constitutionalism
        expire = "1965.1.1.1"
        id=-1
      }
      promote_leader = yes
    }
    add_ideas = {
      cat_race
      poverty5
      outdated_industry
      lack_of_scientists2
      better_science_base
      civilian_economy
    }
    set_AI_strategies_on_every_possible_country_delayed = yes
  }  
}

MDL_create_dynamic_MGY = {
  create_dynamic_country = {
    original_tag = MGY
    set_variable = { collaboration_formed_by = PREV }
    set_temp_variable = { new_country = this }

    PREV = {
      every_controlled_state = {
        limit = { occupied_country_tag = MGY }
        var:new_country = { transfer_state = PREV }
      }
      puppet = new_country
    }
    load_focus_tree = { 
      tree = generic_zebra_focus
      keep_completed = yes		   
    }
    set_capital = {
      state = 733
      remember_old_capital = no
    }
    set_party_name = {
      ideology = neutrality
      long_name = MDL_MGY_FED_PARTY_LONG
      name = MDL_MGY_FED_PARTY
    }
    set_party_name = {
      ideology = democratic
      long_name = MDL_MGY_DEMOCRATIC_PARTY_LONG
      name = MDL_MGY_DEMOCRATIC_PARTY
    }
    generate_character = {
      token_base = MDL_nomarchical_council
      name = MDL_nomarchical_council
    }
    set_portraits = {
      character = MDL_nomarchical_council
      army = {
        large = "gfx/leaders/MDL/nomarchy_council.tga"
      }
    }
    add_country_leader_role = {
      character = MDL_nomarchical_council
      country_leader = {
        ideology = republicanism
        expire = "1965.1.1.1"
        id=-1
      }
      promote_leader = yes
    }
    add_country_leader_role = {
      character = MDL_nomarchical_council
      country_leader = {
        ideology = harmonic_constitutionalism
        expire = "1965.1.1.1"
        id=-1
      }
      promote_leader = yes
    }
    add_ideas = {
      pony_race
      poverty5
      outdated_industry
      lack_of_scientists2
      better_science_base
      civilian_economy
    }
    set_AI_strategies_on_every_possible_country_delayed = yes
  }  
}

MDL_create_dynamic_DRG = {
  create_dynamic_country = {
    original_tag = DRG
    set_variable = { collaboration_formed_by = PREV }
    set_temp_variable = { new_country = this }

    PREV = {
      every_controlled_state = {
        limit = { occupied_country_tag = DRG }
        var:new_country = { transfer_state = PREV }
      }
      puppet = new_country
    }
    load_focus_tree = { 
      tree = generic_zebra_focus
      keep_completed = yes
    }
    set_capital = {
      state = 7
      remember_old_capital = no
    }
    set_party_name = {
      ideology = democratic
      long_name = MDL_DRG_EQS_NAME_LONG
      name = MDL_DRG_EQS_NAME
    }
    generate_character = {
      token_base = MDL_equestrian_command
      name = MDL_equestrian_command
    }
    generate_character = {
      token_base = MDL_equestrian_prov_parliament
      name = MDL_equestrian_prov_parliament
    }
    set_portraits = {
      character = MDL_equestrian_command
      army = {
        large = "gfx/leaders/MDL/MDL_equestrian_command.tga"
      }
    }
    set_portraits = {
      character = MDL_equestrian_prov_parliament
      army = {
        large = "gfx/leaders/MDL/MDL_FED_generic.tga"
      }
    }
    add_country_leader_role = {
      character = MDL_equestrian_command
      country_leader = {
        ideology = liberation_front
        expire = "1965.1.1.1"
        id=-1
      }
      promote_leader = yes
    }
    add_ideas = {
      pony_race
      proper_science_base
      modern_society
      no_lack_of_scientists
      no_poverty
    }
    set_AI_strategies_on_every_possible_country_delayed = yes
  }
}

MDL_elevate_virianthrax = {
  add_country_leader_role = {
    character = MDL_virianthrax
    country_leader = {
      expire = "1965.1.1"
      ideology = stratocracy
    }
    promote_leader = yes
  }
}

#For Harmonic Crusade Path. Gradually remove Sun Madness effect
MDL_reduce_sun_madness = {
  if = {
    limit = { has_idea = MDL_sunmad_0 }
    swap_ideas = {
      remove_idea = MDL_sunmad_0
      add_idea = MDL_sunmad_1
    }
  }
  else_if = {
    limit = { has_idea = MDL_sunmad_1 }
    swap_ideas = {
      remove_idea = MDL_sunmad_1
      add_idea = MDL_sunmad_2
    }
  }
  else_if = {
    limit = { has_idea = MDL_sunmad_2 }
    swap_ideas = {
      remove_idea = MDL_sunmad_2
      add_idea = MDL_sunmad_3
    }
  }
  else_if = {
    limit = { has_idea = MDL_sunmad_3 }
    remove_ideas = MDL_sunmad_3
  }
}

MDL_djinn_SOL_setup = {
  if = {
    limit = {
      NLR = { exists = yes }
    }
    add_opinion_modifier = {
      target = NLR
      modifier = MDL_djinn_opinion
    }
  }
  add_opinion_modifier = {
    target = EQS
    modifier = MDL_djinn_opinion
  }
  if = {
    limit = {
      EQS = {
        exists = yes
        is_ai = yes
      }     
    }
    EQS = { add_ideas = MDL_demon_of_the_outer_night }
  }
  if = {
    limit = {
      NLR = {
        exists = yes
        is_ai = yes
      }
    }
    NLR = { add_ideas = MDL_demon_of_the_outer_night }
  }
  if = {
    limit = {
      CHN = {
        exists = yes
        is_ai = yes
      }
    }
    CHN = { add_political_power = - 9999 }
  }
}

MDL_holy_war_autodo_military_focuses = {
  if = {
    limit = {
      NOT = { has_completed_focus = MDL_army_stuff }
    }
    complete_national_focus = MDL_army_stuff
  }
  if = {
    limit = {
      NOT = { has_completed_focus = MDL_go_with_samira }
    }
    complete_national_focus = MDL_go_with_samira
  }
  if = {
    limit = {
      NOT = { has_completed_focus = MDL_modern_army_crash_course }
    }
    complete_national_focus = MDL_modern_army_crash_course
  }
}

MDL_get_all_resources_ABY_MGY = {
  MGY = {
    every_owned_state = {
      MGY = {
        give_resource_rights = {
          receiver = MDL
          state = PREV
        }
      }
    }
  }
  ABY = {
    every_owned_state = {
      ABY = {
        give_resource_rights = {
          receiver = MDL
          state = PREV
        }
      }
    }
  }
}

#only use for custom puppet tag BSG
MDL_get_all_resources_BAT = {
  BSG = {
    every_owned_state = {
      BSG = {
        give_resource_rights = {
          receiver = MDL
          state = PREV
        }
      }
    }
  }
}

#For Wingbardy War (All Main Paths)
MDL_WNG_transfer_colonies = {
  WNG = {
    remove_state_claim = 1200
    remove_state_claim = 784
  }
  if = {
    limit = {
      ABY = {
        exists = yes
        is_subject_of = MDL
      }
    }
    WNG = {
      every_owned_state = {
        limit = { is_core_of = ABY }
        ABY = { transfer_state = PREV }
      }
    }
    ABY = {
      if = {
        limit = { has_idea = ABY_wingbardian_concessions }
        remove_ideas = ABY_wingbardian_concessions
      }
    }
  }
  else = {
    WNG = {
      every_owned_state = {
        limit = { is_core_of = ABY }
        MDL = { transfer_state = PREV}
      }
    }
    ABY = {
      every_owned_state = {
        limit = { is_core_of = ABY }
        MDL = { transfer_state = PREV}
      }
    }
  }
}

MDL_increase_conscription = {
	if = {
		limit = { has_idea = disarmed_nation }
		add_ideas = limited_conscription
	}
	else_if = {
		limit = { has_idea = volunteer_only }
		add_ideas = limited_conscription
	}
	else_if = {
		limit = { has_idea = limited_conscription }
		add_ideas = extensive_conscription
	}
	else_if = {
		limit = { has_idea = extensive_conscription }
		add_ideas = service_by_requirement
	}
	else_if = {
    limit = { has_idea = service_by_requirement }
		add_ideas = all_adults_serve
	}
	else = {
		limit = { has_idea = all_adults_serve }
		add_manpower = 10000
	}
}

#Grifo path only. heteronym setup
MDL_grifo_setup_heteronym = {
  random_list = {
    1 = {
      set_country_flag = MDL_grifo_modernist
      add_ideas = MDL_grifo_modernist
    }
    1 = {
      set_country_flag = MDL_grifo_socialite
      add_ideas = MDL_grifo_socialite
    }
    1 = {
      set_country_flag = MDL_grifo_naturalist
      add_ideas = MDL_grifo_naturalist
    }
    1 = {
      set_country_flag = MDL_grifo_romanticist
      add_ideas = MDL_grifo_romanticist
    }
  }
}

MDL_grifo_dismiss_heteronyms = {
  clr_country_flag = MDL_heteronyms_active
  if = {
    limit = { has_country_flag = MDL_grifo_modernist }
    clr_country_flag = MDL_grifo_modernist
    remove_ideas = MDL_grifo_modernist
  }
  else_if = {
    limit = { has_country_flag = MDL_grifo_socialite }
    clr_country_flag = MDL_grifo_socialite
    remove_ideas = MDL_grifo_socialite
  }
  else_if = {
    limit = { has_country_flag = MDL_grifo_naturalist }
    clr_country_flag = MDL_grifo_naturalist
    remove_ideas = MDL_grifo_naturalist
  }
  else = {
    clr_country_flag = MDL_grifo_romanticist
    remove_ideas = MDL_grifo_romanticist
  }
}

#Grifo path only. shuffle heteronym
MDL_shuffle_grifo_heteronym = {
  if = {
    limit = { has_country_flag = MDL_grifo_modernist }
    clr_country_flag = MDL_grifo_modernist
    hidden_effect = { remove_ideas = MDL_grifo_modernist }
    random_list = {
      1 = {
        set_country_flag = MDL_grifo_romanticist
        add_ideas = MDL_grifo_romanticist
      }
      1 = {
        set_country_flag = MDL_grifo_socialite
        add_ideas = MDL_grifo_socialite
      }
      1 = {
        set_country_flag = MDL_grifo_naturalist
        add_ideas = MDL_grifo_naturalist
      }
    }
  }
  else_if = {
    limit = { has_country_flag = MDL_grifo_romanticist }
    clr_country_flag = MDL_grifo_romanticist
    hidden_effect = { remove_ideas = MDL_grifo_romanticist }
    random_list = {
      1 = {
        set_country_flag = MDL_grifo_modernist
        add_ideas = MDL_grifo_modernist
      }
      1 = {
        set_country_flag = MDL_grifo_socialite
        add_ideas = MDL_grifo_socialite
      }
      1 = {
        set_country_flag = MDL_grifo_naturalist
        add_ideas = MDL_grifo_naturalist
      }
    }
  }
  else_if = {
    limit = { has_country_flag = MDL_grifo_naturalist }
    clr_country_flag = MDL_grifo_naturalist
    hidden_effect = { remove_ideas = MDL_grifo_naturalist }
    random_list = {
      1 = {
        set_country_flag = MDL_grifo_modernist
        add_ideas = MDL_grifo_modernist
      }
      1 = {
        set_country_flag = MDL_grifo_socialite
        add_ideas = MDL_grifo_socialite
      }
      1 = {
        set_country_flag = MDL_grifo_romanticist
        add_ideas = MDL_grifo_romanticist
      }
    }
  }
  else = {
    clr_country_flag = MDL_grifo_socialite
    hidden_effect = { remove_ideas = MDL_grifo_socialite }
    random_list = {
      1 = {
        set_country_flag = MDL_grifo_romanticist
        add_ideas = MDL_grifo_romanticist
      }
      1 = {
        set_country_flag = MDL_grifo_naturalist
        add_ideas = MDL_grifo_naturalist
      }
      1 = {
        set_country_flag = MDL_grifo_naturalist
          add_ideas = MDL_grifo_naturalist
      }
    }
  }
}
